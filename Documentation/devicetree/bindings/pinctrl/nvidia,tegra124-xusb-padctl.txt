Device tree binding for NVIDIA Tegra XUSB pad controller
========================================================

The Tegra XUSB pad controller manages a set of lanes, each of which can be
assigned to one out of a set of different pads. Some of these pads have an
associated PHY that must be powered up before the pad can be used.

This document defines the device-specific binding for the XUSB pad controller.

Refer to pinctrl-bindings.txt in this directory for generic information about
pin controller device tree bindings and ../phy/phy-bindings.txt for details on
how to describe and reference PHYs in device trees.

Required properties:
--------------------
- compatible: should be "nvidia,tegra124-xusb-padctl"
- reg: Physical base address and length of the controller's registers.
- resets: Must contain an entry for each entry in reset-names.
  See ../reset/reset.txt for details.
- reset-names: Must include the following entries:
  - padctl
- #phy-cells: Should be 1. The specifier is the index of the PHY to reference.
  See <dt-bindings/pinctrl/pinctrl-tegra-xusb.h> for the list of valid values.
- mboxes: Must contain an entry for the XUSB mailbox channel.
  See ../mailbox/mailbox.txt for details.
- mbox-names: Must include the following entries:
  - xusb

Optional properties:
-------------------
- vbus-{0,1,2}-supply: VBUS regulator for the corresponding UTMI pad.
- vddio-hsic-supply: VDDIO regulator for the HSIC pads.
- nvidia,usb3-port-{0,1}-lane: PCIe/SATA lane to which the corresponding USB3
  port is mapped.  See <dt-bindings/pinctrl/pinctrl-tegra-xusb.h> for the list
  of valid values.

Lane muxing:
------------

Child nodes contain the pinmux configurations following the conventions from
the pinctrl-bindings.txt document. Typically a single, static configuration is
given and applied at boot time.

Each subnode describes groups of lanes along with parameters and pads that
they should be assigned to. The name of these subnodes is not important. All
subnodes should be parsed solely based on their content.

Each subnode only applies the parameters that are explicitly listed. In other
words, if a subnode that lists a function but no pin configuration parameters
implies no information about any pin configuration parameters. Similarly, a
subnode that describes only an IDDQ parameter implies no information about
what function the pins are assigned to. For this reason even seemingly boolean
values are actually tristates in this binding: unspecified, off or on.
Unspecified is represented as an absent property, and off/on are represented
as integer values 0 and 1.

Required properties:
- nvidia,lanes: An array of strings. Each string is the name of a lane.

Optional properties:
- nvidia,function: A string that is the name of the function (pad) that the
  pin or group should be assigned to. Valid values for function names are
  listed below.
- nvidia,iddq: Enables IDDQ mode of the lane. (0: no, 1: yes)
- nvidia,usb2-port-num: USB2 port (0, 1, or 2) to which the lane is mapped.
- nvidia,hsic-strobe-trim: HSIC strobe trimmer value.
- nvidia,hsic-rx-strobe-trim: HSIC RX strobe trimmer value.
- nvidia,hsic-rx-data-trim: HSIC RX data trimmer value.
- nvidia,hsic-tx-rtune-n: HSIC TX RTUNEN value.
- nvidia,hsic-tx-rtune-p: HSIC TX RTUNEP value.
- nvidia,hsic-tx-slew-n: HSIC TX SLEWN value.
- nvidia,hsic-tx-slew-p: HSIC TX SLEWP value.
- nvidia,hsic-auto-term: Enables HSIC AUTO_TERM. (0: no, 1: yes)
- nvidia,otg-hs-curr-level-offset: Offset to be applied to the pad's fused
  HS_CURR_LEVEL value.

Note that not all of these properties are valid for all lanes. Lanes can be
divided into three groups:

  - otg-0, otg-1, otg-2:

    Valid functions for this group are: "snps", "xusb", "uart", "rsvd".

    The nvidia,otg-hs-curr-level-offset property only applies.

  - ulpi-0, hsic-0, hsic-1:

    Valid functions for this group are: "snps", "xusb".

    The nvidia,hsic-* properties apply only to the pins hsic-{0,1} when
    the function is xusb.

  - pcie-0, pcie-1, pcie-2, pcie-3, pcie-4, sata-0:

    Valid functions for this group are: "pcie", "usb3", "sata", "rsvd".

    The nvidia,usb2-port-num property only applies and is required when
    the function is usb3.

Example:
========

SoC file extract:
-----------------

	padctl@0,7009f000 {
		compatible = "nvidia,tegra124-xusb-padctl";
		reg = <0x0 0x7009f000 0x0 0x1000>;
		resets = <&tegra_car 142>;
		reset-names = "padctl";
		mboxes = <&xusb_mbox>;
		mbox-names = "xusb";

		#phy-cells = <1>;
	};

Board file extract:
-------------------

	pcie-controller@0,01003000 {
		...

		phys = <&padctl 0>;
		phy-names = "pcie";

		...
	};

	...

	usb@0,70090000 {
		...

		phys = <&padctl 5>, <&padctl 6>, <&padctl 7>;
		phy-names = "utmi-1", "utmi-2", "usb3-0";

		...
	}

	...

	padctl: padctl@0,7009f000 {
		pinctrl-0 = <&padctl_default>;
		pinctrl-names = "default";

		nvidia,usb3-port-0-lane = <TEGRA_XUSB_PADCTL_PIN_PCIE_0>;
		vbus-2-supply = <&vdd_usb3_vbus>;

		padctl_default: pinmux {
			otg {
				nvidia,lanes = "otg-1", "otg-2";
				nvidia,function = "xusb";
			};

			usb3p0 {
				nvidia,lanes = "pcie-0";
				nvidia,function = "usb3";
				nvidia,iddq = <0>;
				nvidia,usb2-port-num = <2>;
			};

			pcie {
				nvidia,lanes = "pcie-2", "pcie-3",
					       "pcie-4";
				nvidia,function = "pcie";
				nvidia,iddq = <0>;
			};

			sata {
				nvidia,lanes = "sata-0";
				nvidia,function = "sata";
				nvidia,iddq = <0>;
			};
		};
	};
